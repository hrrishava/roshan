[{"/home/roshan/todo-app/src/index.js":"1","/home/roshan/todo-app/src/App.js":"2","/home/roshan/todo-app/src/reportWebVitals.js":"3","/home/roshan/todo-app/src/components/Form.js":"4","/home/roshan/todo-app/src/components/TodoList.js":"5","/home/roshan/todo-app/src/components/Todo.js":"6"},{"size":500,"mtime":1609059222195,"results":"7","hashOfConfig":"8"},{"size":1607,"mtime":1614412518475,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1609059222195,"results":"10","hashOfConfig":"8"},{"size":1173,"mtime":1610120512305,"results":"11","hashOfConfig":"8"},{"size":535,"mtime":1614413723924,"results":"12","hashOfConfig":"8"},{"size":924,"mtime":1610121050874,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1g95ooq",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/roshan/todo-app/src/index.js",[],["29","30"],"/home/roshan/todo-app/src/App.js",["31","32"],"import React,{useState, useEffect} from \"react\";\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from \"./components/TodoList\";\n\n\nfunction App() {\n  const[inputText,setInputText] =useState(\"\");\n  const[todos, setTodos] = useState([]);\n  const[status, setStatus] = useState(\"all\");\n  const[filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() =>{\n    getLocalTodos();\n  }, []);\n\n  useEffect (() => {\n    filteredHandler();\n\n  },[todos, status]);\n\n  const filteredHandler = () =>{\n    switch(status){\n      case \"completed\" :\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n        case \"uncompleted\" :\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n        default:\n          setFilteredTodos(todos);\n        break;\n    }\n  };\n  \n  const saveLocalTodos = () => {\n    \n    \n    localStorage.setItem(\"todos\", JSON.stringify(todos))\n    \n  \n    \n\n  \n};\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else{\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n\n  };\n\n  return (\n    <div className=\"App\">\n     <header> TODO LIST </header>\n     <Form \n     inputText={inputText} \n     todos={todos} \n     setTodos={setTodos} \n     setInputText={setInputText}\n     setStatus={setStatus}\n     \n     />\n\n\n     <TodoList \n     setTodos={setTodos} \n     todos={todos}\n     filteredTodos={filteredTodos}\n     />\n    </div>\n    \n  );\n};\n\nexport default App;\n","/home/roshan/todo-app/src/reportWebVitals.js",[],"/home/roshan/todo-app/src/components/Form.js",[],"/home/roshan/todo-app/src/components/TodoList.js",[],"/home/roshan/todo-app/src/components/Todo.js",[],["33","34"],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":20,"column":5,"nodeType":"41","endLine":20,"endColumn":20,"suggestions":"42"},{"ruleId":"43","severity":1,"message":"44","line":36,"column":9,"nodeType":"45","messageId":"46","endLine":36,"endColumn":23},{"ruleId":"35","replacedBy":"47"},{"ruleId":"37","replacedBy":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filteredHandler'. Either include it or remove the dependency array.","ArrayExpression",["51"],"no-unused-vars","'saveLocalTodos' is assigned a value but never used.","Identifier","unusedVar",["49"],["50"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [todos, status, filteredHandler]",{"range":"54","text":"55"},[464,479],"[todos, status, filteredHandler]"]